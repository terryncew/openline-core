name: ACP â†’ COLE (dispatch)

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "examples/acp_checkout_demo.py"
      - "adapters/acp/**"
      - ".github/workflows/acp-to-cole.yml"

permissions:
  contents: read

env:
  TARGET_REPO: terryncew/COLE-Coherence-Layer-Engine-

jobs:
  demo-and-dispatch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 1) Run your demo; create artifacts/acp_result.json (dry-run friendly)
      - name: Run ACP demo (dry-run ok)
        run: |
          mkdir -p artifacts
          if [ -f examples/acp_checkout_demo.py ]; then
            python examples/acp_checkout_demo.py
          else
            echo '{
              "flow_id":"demo_flow_xxx",
              "status":"initiated",
              "psp":"demo",
              "merchant_id":"acct_demo",
              "token_ref":"tok_demo",
              "subtotal":26.0,
              "currency":"USD"
            }' > artifacts/acp_result.json
          fi
          test -s artifacts/acp_result.json

      # 2) Base64 the artifact (mask in logs)
      - name: Prepare payload
        id: prep
        run: |
          B64=$(base64 -w0 < artifacts/acp_result.json)
          echo "::add-mask::$B64"
          echo "acp_b64=$B64" >> "$GITHUB_OUTPUT"

      # 3) Send repository_dispatch to COLE
      - name: Dispatch to COLE
        env:
          TOKEN: ${{ secrets.COLE_DISPATCH_TOKEN }}
          PAYLOAD: ${{ steps.prep.outputs.acp_b64 }}
          TARGET: ${{ env.TARGET_REPO }}
        run: |
          if [ -z "$TOKEN" ]; then
            echo "Missing secret COLE_DISPATCH_TOKEN"; exit 1
          fi
          curl -sS -X POST \
            -H "Authorization: Bearer ${TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${TARGET}/dispatches" \
            -d "{\"event_type\":\"acp_result\",\"client_payload\":{\"acp_b64\":\"${PAYLOAD}\"}}"
