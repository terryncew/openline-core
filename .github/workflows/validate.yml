name: Schema check

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install jsonschema==4.22.0

      - name: Validate vectors (and optional receipt)
        run: |
          set -euo pipefail
          python - <<'PY'
          import json, os, sys
          from jsonschema import Draft7Validator

          def load(p):
            with open(p, "r", encoding="utf-8") as f:
              return json.load(f)

          ok = True
          def check(schema_path, instance_path):
            nonlocal ok
            print(f"\n==> {instance_path} against {schema_path}")
            try:
              schema = load(schema_path)
              inst = load(instance_path)
              errs = sorted(Draft7Validator(schema).iter_errors(inst), key=lambda e: e.path)
              if not errs:
                print("OK")
              else:
                ok = False
                for e in errs:
                  loc = "/".join(map(str, e.path)) or "(root)"
                  print(f"FAIL: {instance_path} :: {loc} :: {e.message}")
            except FileNotFoundError as e:
              ok = False
              print(f"FAIL: missing file: {e.filename}")
            except Exception as e:
              ok = False
              print(f"FAIL: {instance_path} :: {e}")

          # vectors
          check("schemas/receipt.schema.json", "schemas/vectors/receipt-min.json")
          check("schemas/frame.schema.json", "schemas/vectors/frame-min.json")

          # Optional repo receipt
          if os.path.exists("docs/receipt.latest.json"):
            check("schemas/receipt.schema.json", "docs/receipt.latest.json")
          else:
            print("\n(skip) docs/receipt.latest.json not present")

          sys.exit(0 if ok else 1)
          PY
